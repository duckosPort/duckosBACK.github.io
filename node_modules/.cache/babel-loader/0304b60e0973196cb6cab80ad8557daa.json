{"ast":null,"code":"var _jsxFileName = \"/media/fernando-bezerra/Files1/CODES/RandomCoding/A/portfolio-inner-site-master/src/components/os/Desktop.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useEffect, useState } from 'react';\nimport Colors from '../../constants/colors';\nimport Portfolio from '../applications/Portfolio';\nimport Doom from '../applications/Doom';\nimport Tetris from '../applications/Tetris';\nimport Pacman from '../applications/Pacman';\nimport SSF2T from '../applications/SSF2T';\nimport PokemonFireRed from '../applications/PokemonFireRed';\nimport Terminal from '../applications/Terminal';\nimport ShutdownSequence from './ShutdownSequence';\nimport ThisComputer from '../applications/ThisComputer';\nimport Toolbar from './Toolbar';\nimport DesktopShortcut from './DesktopShortcut';\nimport Credits from '../applications/Credits';\nimport ContextMenu from './ContextMenu';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst APPLICATIONS = {\n  computer: {\n    key: 'computer',\n    name: 'This Computer',\n    shortcutIcon: 'computerBig',\n    component: ThisComputer\n  },\n  portfolio: {\n    key: 'portfolio',\n    name: 'Portfolio',\n    shortcutIcon: 'showcaseIcon',\n    component: Portfolio\n  },\n  tetris: {\n    key: 'tetris',\n    name: 'Tetris',\n    shortcutIcon: 'tetrisIcon',\n    component: Tetris\n  },\n  pacman: {\n    key: 'pacman',\n    name: 'PC-MAN',\n    shortcutIcon: 'pacmanIcon',\n    component: Pacman\n  },\n  doom: {\n    key: 'doom',\n    name: 'Doom',\n    shortcutIcon: 'doomIcon',\n    component: Doom\n  },\n  ssf2t: {\n    key: 'ssf2t',\n    name: 'Super Street Fighter 2 Turbo',\n    shortcutIcon: 'ssf2tIcon',\n    component: SSF2T\n  },\n  pokemonFireRed: {\n    key: 'pokemonFireRed',\n    name: 'Pokemon FireRed',\n    shortcutIcon: 'pokemonFireRedIcon',\n    component: PokemonFireRed\n  },\n  credits: {\n    key: 'credits',\n    name: 'Credits',\n    shortcutIcon: 'credits',\n    component: Credits\n  },\n  terminal: {\n    key: 'terminal',\n    name: 'Terminal',\n    shortcutIcon: 'terminal',\n    component: Terminal\n  }\n};\n\nconst Desktop = props => {\n  _s();\n\n  const [windows, setWindows] = useState({});\n  const [shortcuts, setShortcuts] = useState([]);\n  const [shutdown, setShutdown] = useState(false);\n  const [numShutdowns, setNumShutdowns] = useState(1);\n  const getHighestZIndex = useCallback(() => {\n    let highestZIndex = 0;\n    Object.keys(windows).forEach(key => {\n      const window = windows[key];\n\n      if (window) {\n        if (window.zIndex > highestZIndex) highestZIndex = window.zIndex;\n      }\n    });\n    return highestZIndex;\n  }, [windows]);\n  const addWindow = useCallback((key, element) => {\n    setWindows(prevState => ({ ...prevState,\n      [key]: {\n        zIndex: getHighestZIndex() + 1,\n        minimized: false,\n        component: element,\n        name: APPLICATIONS[key].name,\n        icon: APPLICATIONS[key].shortcutIcon\n      }\n    }));\n  }, [getHighestZIndex]);\n  const removeWindow = useCallback(key => {\n    // Absolute hack and a half\n    setTimeout(() => {\n      setWindows(prevWindows => {\n        const newWindows = { ...prevWindows\n        };\n        delete newWindows[key];\n        return newWindows;\n      });\n    }, 100);\n  }, []);\n  const minimizeWindow = useCallback(key => {\n    setWindows(prevWindows => {\n      const newWindows = { ...prevWindows\n      };\n      newWindows[key].minimized = true;\n      return newWindows;\n    });\n  }, []);\n  const toggleMinimize = useCallback(key => {\n    const newWindows = { ...windows\n    };\n    const highestIndex = getHighestZIndex();\n\n    if (newWindows[key].minimized || newWindows[key].zIndex === highestIndex) {\n      newWindows[key].minimized = !newWindows[key].minimized;\n    }\n\n    newWindows[key].zIndex = getHighestZIndex() + 1;\n    setWindows(newWindows);\n  }, [windows, getHighestZIndex]);\n  const onWindowInteract = useCallback(key => {\n    setWindows(prevWindows => ({ ...prevWindows,\n      [key]: { ...prevWindows[key],\n        zIndex: 1 + getHighestZIndex()\n      }\n    }));\n  }, [setWindows, getHighestZIndex]);\n  const openPortfolio = useCallback(() => {\n    if (!windows['portfolio']) {\n      const portfolioApp = APPLICATIONS['portfolio'];\n      addWindow('portfolio', /*#__PURE__*/_jsxDEV(portfolioApp.component, {\n        onInteract: () => onWindowInteract('portfolio'),\n        onMinimize: () => minimizeWindow('portfolio'),\n        onClose: () => removeWindow('portfolio')\n      }, 'portfolio', false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 17\n      }, this));\n    } else {\n      toggleMinimize('portfolio');\n    }\n  }, [windows, addWindow, onWindowInteract, minimizeWindow, removeWindow, toggleMinimize]);\n  const openTerminal = useCallback(() => {\n    if (!windows['terminal']) {\n      const terminalApp = APPLICATIONS['terminal'];\n      addWindow('terminal', /*#__PURE__*/_jsxDEV(terminalApp.component, {\n        onInteract: () => onWindowInteract('terminal'),\n        onMinimize: () => minimizeWindow('terminal'),\n        onClose: () => removeWindow('terminal'),\n        openGui: openPortfolio\n      }, 'terminal', false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 17\n      }, this));\n    } else {\n      toggleMinimize('terminal');\n    }\n  }, [windows, addWindow, onWindowInteract, minimizeWindow, removeWindow, toggleMinimize, openPortfolio]);\n  useEffect(() => {\n    if (shutdown === true) {\n      rebootDesktop();\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, [shutdown]);\n  useEffect(() => {\n    const newShortcuts = [];\n    Object.keys(APPLICATIONS).forEach(key => {\n      const app = APPLICATIONS[key]; // Skip terminal from desktop shortcuts\n\n      if (app.key === 'terminal') {\n        return;\n      }\n\n      newShortcuts.push({\n        shortcutName: app.name,\n        icon: app.shortcutIcon,\n        onOpen: () => {\n          addWindow(app.key, /*#__PURE__*/_jsxDEV(app.component, {\n            onInteract: () => onWindowInteract(app.key),\n            onMinimize: () => minimizeWindow(app.key),\n            onClose: () => removeWindow(app.key)\n          }, app.key, false, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 25\n          }, this));\n        }\n      });\n    });\n    newShortcuts.forEach(shortcut => {\n      if (shortcut.shortcutName === 'Portfolio') {\n        shortcut.onOpen();\n      }\n    }); // Open terminal minimized (taskbar only)\n\n    const terminalApp = APPLICATIONS['terminal'];\n    addWindow('terminal', /*#__PURE__*/_jsxDEV(terminalApp.component, {\n      onInteract: () => onWindowInteract('terminal'),\n      onMinimize: () => minimizeWindow('terminal'),\n      onClose: () => removeWindow('terminal'),\n      openGui: openPortfolio\n    }, 'terminal', false, {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 13\n    }, this));\n    setTimeout(() => {\n      minimizeWindow('terminal');\n    }, 100);\n    setShortcuts(newShortcuts); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  const rebootDesktop = useCallback(() => {\n    setWindows({});\n  }, []);\n  const startShutdown = useCallback(() => {\n    setTimeout(() => {\n      setShutdown(true);\n      setNumShutdowns(numShutdowns + 1);\n    }, 600);\n  }, [numShutdowns]);\n  const openPortfolioFromMenu = useCallback(() => {\n    if (!windows['portfolio']) {\n      const portfolioApp = APPLICATIONS['portfolio'];\n      addWindow('portfolio', /*#__PURE__*/_jsxDEV(portfolioApp.component, {\n        onInteract: () => onWindowInteract('portfolio'),\n        onMinimize: () => minimizeWindow('portfolio'),\n        onClose: () => removeWindow('portfolio')\n      }, 'portfolio', false, {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 17\n      }, this));\n    } else {\n      toggleMinimize('portfolio');\n    }\n  }, [windows, addWindow, onWindowInteract, minimizeWindow, removeWindow, toggleMinimize]);\n  const openTerminalFromMenu = useCallback(() => {\n    if (!windows['terminal']) {\n      const terminalApp = APPLICATIONS['terminal'];\n      addWindow('terminal', /*#__PURE__*/_jsxDEV(terminalApp.component, {\n        onInteract: () => onWindowInteract('terminal'),\n        onMinimize: () => minimizeWindow('terminal'),\n        onClose: () => removeWindow('terminal'),\n        openGui: openPortfolio\n      }, 'terminal', false, {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 17\n      }, this));\n    } else {\n      toggleMinimize('terminal');\n    }\n  }, [windows, addWindow, onWindowInteract, minimizeWindow, removeWindow, toggleMinimize, openPortfolio]);\n  const openCreditsFromMenu = useCallback(() => {\n    if (!windows['credits']) {\n      const creditsApp = APPLICATIONS['credits'];\n      addWindow('credits', /*#__PURE__*/_jsxDEV(creditsApp.component, {\n        onInteract: () => onWindowInteract('credits'),\n        onMinimize: () => minimizeWindow('credits'),\n        onClose: () => removeWindow('credits')\n      }, 'credits', false, {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 17\n      }, this));\n    } else {\n      toggleMinimize('credits');\n    }\n  }, [windows, addWindow, onWindowInteract, minimizeWindow, removeWindow, toggleMinimize]);\n  return !shutdown ? /*#__PURE__*/_jsxDEV(\"div\", {\n    style: styles.desktop,\n    children: [Object.keys(windows).map(key => {\n      const element = windows[key].component;\n      if (!element) return /*#__PURE__*/_jsxDEV(\"div\", {}, `win-${key}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 38\n      }, this);\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: Object.assign({}, {\n          zIndex: windows[key].zIndex\n        }, windows[key].minimized && styles.minimized),\n        children: /*#__PURE__*/React.cloneElement(element, {\n          key,\n          onInteract: () => onWindowInteract(key),\n          onClose: () => removeWindow(key)\n        })\n      }, `win-${key}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 333,\n        columnNumber: 21\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.shortcuts,\n      children: shortcuts.map((shortcut, i) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          style: Object.assign({}, styles.shortcutContainer, {\n            top: i * 104\n          }),\n          children: /*#__PURE__*/_jsxDEV(DesktopShortcut, {\n            icon: shortcut.icon,\n            shortcutName: shortcut.shortcutName,\n            onOpen: shortcut.onOpen\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 358,\n            columnNumber: 29\n          }, this)\n        }, shortcut.shortcutName, false, {\n          fileName: _jsxFileName,\n          lineNumber: 352,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 349,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Toolbar, {\n      windows: windows,\n      toggleMinimize: toggleMinimize,\n      onCloseWindow: removeWindow,\n      shutdown: startShutdown,\n      openTerminal: openTerminal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 367,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ContextMenu, {\n      onClose: () => {},\n      onOpenPortfolio: openPortfolioFromMenu,\n      onOpenTerminal: openTerminalFromMenu,\n      onOpenCredits: openCreditsFromMenu,\n      onShutdown: startShutdown\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 374,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 327,\n    columnNumber: 9\n  }, this) : /*#__PURE__*/_jsxDEV(ShutdownSequence, {\n    setShutdown: setShutdown,\n    numShutdowns: numShutdowns\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 383,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Desktop, \"hdVAO0vpLRA5EJP2D3mFMvjMt1g=\");\n\n_c = Desktop;\nconst styles = {\n  desktop: {\n    minHeight: '100%',\n    flex: 1,\n    backgroundColor: Colors.turquoise,\n    backgroundImage: 'url(' + require('../../assets/pictures/forest-wallpaper.jpg') + ')',\n    backgroundSize: 'cover',\n    backgroundPosition: 'center',\n    backgroundRepeat: 'no-repeat'\n  },\n  shutdown: {\n    minHeight: '100%',\n    flex: 1,\n    backgroundColor: '#1d2e2f'\n  },\n  shortcutContainer: {\n    position: 'absolute'\n  },\n  shortcuts: {\n    position: 'absolute',\n    top: 16,\n    left: 6\n  },\n  minimized: {\n    pointerEvents: 'none',\n    opacity: 0\n  }\n};\nexport default Desktop;\n\nvar _c;\n\n$RefreshReg$(_c, \"Desktop\");","map":{"version":3,"sources":["/media/fernando-bezerra/Files1/CODES/RandomCoding/A/portfolio-inner-site-master/src/components/os/Desktop.tsx"],"names":["React","useCallback","useEffect","useState","Colors","Portfolio","Doom","Tetris","Pacman","SSF2T","PokemonFireRed","Terminal","ShutdownSequence","ThisComputer","Toolbar","DesktopShortcut","Credits","ContextMenu","APPLICATIONS","computer","key","name","shortcutIcon","component","portfolio","tetris","pacman","doom","ssf2t","pokemonFireRed","credits","terminal","Desktop","props","windows","setWindows","shortcuts","setShortcuts","shutdown","setShutdown","numShutdowns","setNumShutdowns","getHighestZIndex","highestZIndex","Object","keys","forEach","window","zIndex","addWindow","element","prevState","minimized","icon","removeWindow","setTimeout","prevWindows","newWindows","minimizeWindow","toggleMinimize","highestIndex","onWindowInteract","openPortfolio","portfolioApp","openTerminal","terminalApp","rebootDesktop","newShortcuts","app","push","shortcutName","onOpen","shortcut","startShutdown","openPortfolioFromMenu","openTerminalFromMenu","openCreditsFromMenu","creditsApp","styles","desktop","map","assign","cloneElement","onInteract","onClose","i","shortcutContainer","top","minHeight","flex","backgroundColor","turquoise","backgroundImage","require","backgroundSize","backgroundPosition","backgroundRepeat","position","left","pointerEvents","opacity"],"mappings":"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","sourcesContent":["import React, { useCallback, useEffect, useState } from 'react';\nimport Colors from '../../constants/colors';\nimport Portfolio from '../applications/Portfolio';\nimport Doom from '../applications/Doom';\nimport Tetris from '../applications/Tetris';\nimport Pacman from '../applications/Pacman';\nimport SSF2T from '../applications/SSF2T';\nimport PokemonFireRed from '../applications/PokemonFireRed';\nimport Terminal from '../applications/Terminal';\nimport ShutdownSequence from './ShutdownSequence';\nimport ThisComputer from '../applications/ThisComputer';\nimport Toolbar from './Toolbar';\nimport DesktopShortcut, { DesktopShortcutProps } from './DesktopShortcut';\nimport { IconName } from '../../assets/icons';\nimport Credits from '../applications/Credits';\nimport ContextMenu from './ContextMenu';\n\nexport interface DesktopProps {}\n\ntype ExtendedWindowAppProps<T> = T & WindowAppProps;\n\nconst APPLICATIONS: {\n    [key in string]: {\n        key: string;\n        name: string;\n        shortcutIcon: IconName;\n        component: React.FC<ExtendedWindowAppProps<any>>;\n    };\n} = {\n    computer: {\n        key: 'computer',\n        name: 'This Computer',\n        shortcutIcon: 'computerBig',\n        component: ThisComputer,\n    },\n    portfolio: {\n        key: 'portfolio',\n        name: 'Portfolio',\n        shortcutIcon: 'showcaseIcon',\n        component: Portfolio,\n    },\n    tetris: {\n        key: 'tetris',\n        name: 'Tetris',\n        shortcutIcon: 'tetrisIcon',\n        component: Tetris,\n    },\n    pacman: {\n        key: 'pacman',\n        name: 'PC-MAN',\n        shortcutIcon: 'pacmanIcon',\n        component: Pacman,\n    },\n    doom: {\n        key: 'doom',\n        name: 'Doom',\n        shortcutIcon: 'doomIcon',\n        component: Doom,\n    },\n    ssf2t: {\n        key: 'ssf2t',\n        name: 'Super Street Fighter 2 Turbo',\n        shortcutIcon: 'ssf2tIcon',\n        component: SSF2T,\n    },\n    pokemonFireRed: {\n        key: 'pokemonFireRed',\n        name: 'Pokemon FireRed',\n        shortcutIcon: 'pokemonFireRedIcon',\n        component: PokemonFireRed,\n    },\n    credits: {\n        key: 'credits',\n        name: 'Credits',\n        shortcutIcon: 'credits',\n        component: Credits,\n    },\n    terminal: {\n        key: 'terminal',\n        name: 'Terminal',\n        shortcutIcon: 'terminal',\n        component: Terminal,\n    },\n};\n\nconst Desktop: React.FC<DesktopProps> = (props) => {\n    const [windows, setWindows] = useState<DesktopWindows>({});\n\n    const [shortcuts, setShortcuts] = useState<DesktopShortcutProps[]>([]);\n\n    const [shutdown, setShutdown] = useState(false);\n    const [numShutdowns, setNumShutdowns] = useState(1);\n\n    const getHighestZIndex = useCallback((): number => {\n        let highestZIndex = 0;\n        Object.keys(windows).forEach((key) => {\n            const window = windows[key];\n            if (window) {\n                if (window.zIndex > highestZIndex)\n                    highestZIndex = window.zIndex;\n            }\n        });\n        return highestZIndex;\n    }, [windows]);\n\n    const addWindow = useCallback(\n        (key: string, element: JSX.Element) => {\n            setWindows((prevState) => ({\n                ...prevState,\n                [key]: {\n                    zIndex: getHighestZIndex() + 1,\n                    minimized: false,\n                    component: element,\n                    name: APPLICATIONS[key].name,\n                    icon: APPLICATIONS[key].shortcutIcon,\n                },\n            }));\n        },\n        [getHighestZIndex]\n    );\n\n    const removeWindow = useCallback((key: string) => {\n        // Absolute hack and a half\n        setTimeout(() => {\n            setWindows((prevWindows) => {\n                const newWindows = { ...prevWindows };\n                delete newWindows[key];\n                return newWindows;\n            });\n        }, 100);\n    }, []);\n\n    const minimizeWindow = useCallback((key: string) => {\n        setWindows((prevWindows) => {\n            const newWindows = { ...prevWindows };\n            newWindows[key].minimized = true;\n            return newWindows;\n        });\n    }, []);\n\n    const toggleMinimize = useCallback(\n        (key: string) => {\n            const newWindows = { ...windows };\n            const highestIndex = getHighestZIndex();\n            if (\n                newWindows[key].minimized ||\n                newWindows[key].zIndex === highestIndex\n            ) {\n                newWindows[key].minimized = !newWindows[key].minimized;\n            }\n            newWindows[key].zIndex = getHighestZIndex() + 1;\n            setWindows(newWindows);\n        },\n        [windows, getHighestZIndex]\n    );\n\n    const onWindowInteract = useCallback(\n        (key: string) => {\n            setWindows((prevWindows) => ({\n                ...prevWindows,\n                [key]: {\n                    ...prevWindows[key],\n                    zIndex: 1 + getHighestZIndex(),\n                },\n            }));\n        },\n        [setWindows, getHighestZIndex]\n    );\n\n    const openPortfolio = useCallback(() => {\n        if (!windows['portfolio']) {\n            const portfolioApp = APPLICATIONS['portfolio'];\n            addWindow(\n                'portfolio',\n                <portfolioApp.component\n                    onInteract={() => onWindowInteract('portfolio')}\n                    onMinimize={() => minimizeWindow('portfolio')}\n                    onClose={() => removeWindow('portfolio')}\n                    key='portfolio'\n                />\n            );\n        } else {\n            toggleMinimize('portfolio');\n        }\n    }, [windows, addWindow, onWindowInteract, minimizeWindow, removeWindow, toggleMinimize]);\n\n    const openTerminal = useCallback(() => {\n        if (!windows['terminal']) {\n            const terminalApp = APPLICATIONS['terminal'];\n            addWindow(\n                'terminal',\n                <terminalApp.component\n                    onInteract={() => onWindowInteract('terminal')}\n                    onMinimize={() => minimizeWindow('terminal')}\n                    onClose={() => removeWindow('terminal')}\n                    openGui={openPortfolio}\n                    key='terminal'\n                />\n            );\n        } else {\n            toggleMinimize('terminal');\n        }\n    }, [windows, addWindow, onWindowInteract, minimizeWindow, removeWindow, toggleMinimize, openPortfolio]);\n\n    useEffect(() => {\n        if (shutdown === true) {\n            rebootDesktop();\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [shutdown]);\n\n    useEffect(() => {\n        const newShortcuts: DesktopShortcutProps[] = [];\n        Object.keys(APPLICATIONS).forEach((key) => {\n            const app = APPLICATIONS[key];\n            // Skip terminal from desktop shortcuts\n            if (app.key === 'terminal') {\n                return;\n            }\n            newShortcuts.push({\n                shortcutName: app.name,\n                icon: app.shortcutIcon,\n                onOpen: () => {\n                    addWindow(\n                        app.key,\n                        <app.component\n                            onInteract={() => onWindowInteract(app.key)}\n                            onMinimize={() => minimizeWindow(app.key)}\n                            onClose={() => removeWindow(app.key)}\n                            key={app.key}\n                        />\n                    );\n                },\n            });\n        });\n\n        newShortcuts.forEach((shortcut) => {\n            if (shortcut.shortcutName === 'Portfolio') {\n                shortcut.onOpen();\n            }\n        });\n\n        // Open terminal minimized (taskbar only)\n        const terminalApp = APPLICATIONS['terminal'];\n        addWindow(\n            'terminal',\n            <terminalApp.component\n                onInteract={() => onWindowInteract('terminal')}\n                onMinimize={() => minimizeWindow('terminal')}\n                onClose={() => removeWindow('terminal')}\n                openGui={openPortfolio}\n                key='terminal'\n            />\n        );\n        setTimeout(() => {\n            minimizeWindow('terminal');\n        }, 100);\n\n        setShortcuts(newShortcuts);\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    const rebootDesktop = useCallback(() => {\n        setWindows({});\n    }, []);\n\n    const startShutdown = useCallback(() => {\n        setTimeout(() => {\n            setShutdown(true);\n            setNumShutdowns(numShutdowns + 1);\n        }, 600);\n    }, [numShutdowns]);\n\n    const openPortfolioFromMenu = useCallback(() => {\n        if (!windows['portfolio']) {\n            const portfolioApp = APPLICATIONS['portfolio'];\n            addWindow(\n                'portfolio',\n                <portfolioApp.component\n                    onInteract={() => onWindowInteract('portfolio')}\n                    onMinimize={() => minimizeWindow('portfolio')}\n                    onClose={() => removeWindow('portfolio')}\n                    key='portfolio'\n                />\n            );\n        } else {\n            toggleMinimize('portfolio');\n        }\n    }, [windows, addWindow, onWindowInteract, minimizeWindow, removeWindow, toggleMinimize]);\n\n    const openTerminalFromMenu = useCallback(() => {\n        if (!windows['terminal']) {\n            const terminalApp = APPLICATIONS['terminal'];\n            addWindow(\n                'terminal',\n                <terminalApp.component\n                    onInteract={() => onWindowInteract('terminal')}\n                    onMinimize={() => minimizeWindow('terminal')}\n                    onClose={() => removeWindow('terminal')}\n                    openGui={openPortfolio}\n                    key='terminal'\n                />\n            );\n        } else {\n            toggleMinimize('terminal');\n        }\n    }, [windows, addWindow, onWindowInteract, minimizeWindow, removeWindow, toggleMinimize, openPortfolio]);\n\n    const openCreditsFromMenu = useCallback(() => {\n        if (!windows['credits']) {\n            const creditsApp = APPLICATIONS['credits'];\n            addWindow(\n                'credits',\n                <creditsApp.component\n                    onInteract={() => onWindowInteract('credits')}\n                    onMinimize={() => minimizeWindow('credits')}\n                    onClose={() => removeWindow('credits')}\n                    key='credits'\n                />\n            );\n        } else {\n            toggleMinimize('credits');\n        }\n    }, [windows, addWindow, onWindowInteract, minimizeWindow, removeWindow, toggleMinimize]);\n\n    return !shutdown ? (\n        <div style={styles.desktop}>\n            {/* For each window in windows, loop over and render  */}\n            {Object.keys(windows).map((key) => {\n                const element = windows[key].component;\n                if (!element) return <div key={`win-${key}`}></div>;\n                return (\n                    <div\n                        key={`win-${key}`}\n                        style={Object.assign(\n                            {},\n                            { zIndex: windows[key].zIndex },\n                            windows[key].minimized && styles.minimized\n                        )}\n                    >\n                        {React.cloneElement(element, {\n                            key,\n                            onInteract: () => onWindowInteract(key),\n                            onClose: () => removeWindow(key),\n                        })}\n                    </div>\n                );\n            })}\n            <div style={styles.shortcuts}>\n                {shortcuts.map((shortcut, i) => {\n                    return (\n                        <div\n                            style={Object.assign({}, styles.shortcutContainer, {\n                                top: i * 104,\n                            })}\n                            key={shortcut.shortcutName}\n                        >\n                            <DesktopShortcut\n                                icon={shortcut.icon}\n                                shortcutName={shortcut.shortcutName}\n                                onOpen={shortcut.onOpen}\n                            />\n                        </div>\n                    );\n                })}\n            </div>\n            <Toolbar\n                windows={windows}\n                toggleMinimize={toggleMinimize}\n                onCloseWindow={removeWindow}\n                shutdown={startShutdown}\n                openTerminal={openTerminal}\n            />\n            <ContextMenu\n                onClose={() => {}}\n                onOpenPortfolio={openPortfolioFromMenu}\n                onOpenTerminal={openTerminalFromMenu}\n                onOpenCredits={openCreditsFromMenu}\n                onShutdown={startShutdown}\n            />\n        </div>\n    ) : (\n        <ShutdownSequence\n            setShutdown={setShutdown}\n            numShutdowns={numShutdowns}\n        />\n    );\n};\n\nconst styles: StyleSheetCSS = {\n    desktop: {\n        minHeight: '100%',\n        flex: 1,\n        backgroundColor: Colors.turquoise,\n        backgroundImage: 'url(' + require('../../assets/pictures/forest-wallpaper.jpg') + ')',\n        backgroundSize: 'cover',\n        backgroundPosition: 'center',\n        backgroundRepeat: 'no-repeat',\n    },\n    shutdown: {\n        minHeight: '100%',\n        flex: 1,\n        backgroundColor: '#1d2e2f',\n    },\n    shortcutContainer: {\n        position: 'absolute',\n    },\n    shortcuts: {\n        position: 'absolute',\n        top: 16,\n        left: 6,\n    },\n    minimized: {\n        pointerEvents: 'none',\n        opacity: 0,\n    },\n};\n\nexport default Desktop;\n"]},"metadata":{},"sourceType":"module"}